server:
  port: 8081
  connection-timeout: 60000
mqtt:
  userName: admin
  password: 123456
  url: tcp://10.17.0.12:1883
  #url: tcp://10.0.96.99:1883
  #生产者
  producer:
    #queues设置
    #clientId: MQTT_FX_Client.producer.base
    clientId: MQTT_FX_Client.producer.uip-base.publisher.base
    #生产者 Routing key
    #defaultTopic: testRoutingKey
    defaultTopic: jdev.att.706037909.api
  #消费者
  consumer:
    #queues设置
    #clientId: MQTT_FX_Client.consumer.base
    clientId: MQTT_FX_Client.consumer.uip-base.subscriber.base
    #消费者 Routing key （多个逗号分隔）
    #defaultTopic: testRoutingKey,demoRoutingKey
    defaultTopic: jdev/att/706037909/login,jdev/att/706037909/will,jdev/att/706037909/record
spring:
  data:
    elasticsearch:
  rabbitmq:
    host: 192.168.0.123
    port: 5672
    username: admin
    password: admin
    exchangeDurable: true
#    listener:
#      direct:
#        acknowledge-mode: manual
#      simple:
#        acknowledge-mode: manual
  mail:
    host: smtp.qq.com
    username: 1420408096@qq.com
    password: byxxlzgcaozhgghh
    properties:
      mail:
        smtp:
          ssl:
            enable:
              true
  datasource:
    druid:
      use-global-data-source-stat: true
    type: com.alibaba.druid.pool.DruidDataSource

  freemarker:
    template-loader-path: classpath:/templates/
mybatis:
  mapper-locations: classpath:mybatis/mapper/*.xml
  config-location: classpath:mybatis/mybatis-config.xml
sso:
  cas:
    path-url: "/ssoLogin"

demo-mail.from : ${spring.mail.username}
logging:
  file: log/springboot.log
swagger:
  config: true

# 主数据源配置信息
primary:
  datasource:
    #druid相关配置
    druid:
      driverClassName: org.postgresql.Driver
      password: root
      url: jdbc:postgresql://localhost:5432/postgres
      username: postgres
      #配置初始化大小/最小/最大
      initialSize: 1
      minIdle: 1
      maxActive: 200
      #获取连接等待超时时间
      maxWait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      timeBetweenEvictionRunsMillis: 60000
      #一个连接在池中最小生存的时间
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      #打开PSCache，并指定每个连接上PSCache的大小。PSCache对支持游标的数据库性能提升巨大，比如说oracle
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j,config
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
# 副数据源配置信息
second:
  datasource:
    druid:
      driverClassName: org.postgresql.Driver
      password: root
      url: jdbc:postgresql://localhost:5432/postgres
      username: postgres
      #配置初始化大小/最小/最大
      initialSize: 1
      minIdle: 1
      maxActive: 200
      #获取连接等待超时时间
      maxWait: 60000
      #间隔多久进行一次检测，检测需要关闭的空闲连接
      timeBetweenEvictionRunsMillis: 60000
      #一个连接在池中最小生存的时间
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      #打开PSCache，并指定每个连接上PSCache的大小。PSCache对支持游标的数据库性能提升巨大，比如说oracle
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j,config
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000